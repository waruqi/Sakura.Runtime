name: windows-xmake-cl-build

on: [push, pull_request]
env:
  VulkanSDKVersion: 1.2.162.1

jobs:
 build-windows-cl:
  runs-on: windows-2019
  steps:
   - uses: actions/checkout@v2
     with:
      lfs: 'true'
   - uses: xmake-io/github-action-setup-xmake@v1
     with:
      xmake-version: latest
   - name: Set env
     id: env
     run: |
        echo "::set-output name=VULKAN_SDK::C:\VulkanSDK\${{env.VulkanSDKVersion}}"
        xmake l setup.lua
   - name: Cache
     id: cache
     uses: actions/cache@v1.1.2
     with:
      path: ${{steps.env.outputs.VULKAN_SDK}}
      key: VulkanSdk${{env.VulkanSDKVersion}}WindowsExtracted2
   - name: Download & Install Vulkan SDK
     if: steps.cache.outputs.cache-hit != 'true'
     run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/${{env.VulkanSDKVersion}}/windows/VulkanSDK-${{env.VulkanSDKVersion}}-Installer.exe?u= -OutFile ../vulkan-sdk-${{env.VulkanSDKVersion}}.exe
        $installer = Start-Process -FilePath ../vulkan-sdk-${{env.VulkanSDKVersion}}.exe -Wait -PassThru -ArgumentList @("/S");
        $installer.WaitForExit();
   - name: ConfigureDebug
     run: xmake f -m debug -y -v --build_tests=n --build_usdtool=n -c
     env:
        VULKAN_SDK: ${{steps.env.outputs.VULKAN_SDK}}
   - name: UploadMeta
     uses: actions/upload-artifact@v3
     with:
        name: meta-files
        path: build/.gens
   - name: Debug
     shell: cmd
     run: xmake -y -vD
     env:
        VULKAN_SDK: ${{steps.env.outputs.VULKAN_SDK}}
   - name: Release
     shell: cmd
     run: |
        xmake f -m release -y -c -v --build_tests=n 
        xmake -y -v
     env:
        VULKAN_SDK: ${{steps.env.outputs.VULKAN_SDK}}
